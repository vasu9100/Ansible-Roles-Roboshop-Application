- name: INSTALLING MAVEN
  dnf:
    name: maven
    state: present

- name: CONFIGURE APPLICATION USER
  user:
    name: roboshop

- name: CREATE APP DIRECTORY
  file:
    path: /app
    state: directory

- name: DOWNLOAD APPLICATION CODE INTO APP DIRECTORY
  get_url:
    url: "https://roboshop-builds.s3.amazonaws.com/{{ COMPONENT }}.zip"
    dest: /tmp

- name: UNZIP APP CODE
  unarchive:
    src: /tmp/{{ COMPONENT }}.zip
    dest: /app
    remote_src: yes

- name: INSTALL MAVEN PACKAGES
  shell: "{{ item }}"
  loop:
    - mvn clean package
    - mv target/shipping-1.0.jar {{ COMPONENT }}.jar
  args:
    chdir: /app

- name: COPY SHIPPING SERVICE FILE
  copy:
    src: "{{ COMPONENT }}.service"
    dest: /etc/systemd/system/{{ COMPONENT }}.service

- name: RELOAD SYSTEMD DAEMON
  systemd:
    daemon_reexec: yes

- name: START SHIPPING SERVICE
  systemd:
    name: "{{ COMPONENT }}"
    state: started

- name: MYSQL INSTALLATION
  dnf:
    name: mysql
    state: present

- name: check cities schema exists or not
  ansible.builtin.command:  mysql -h mysql.gonepudirobot.online -uroot -pRoboShop@1 -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
  register: schema

- name: print output
  ansible.builtin.debug:
    msg: "schema output: {{ schema }}"

- name: load cities data
  ansible.builtin.shell: "mysql -h mysql.gonepudirobot.online -uroot -pRoboShop@1  < /app/schema/shipping.sql"
  when: schema.stdout != "1"

- name: RESTART SHIPPING SERVICE
  systemd:
    name: "{{ COMPONENT }}"
    state: restarted
